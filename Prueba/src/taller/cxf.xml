<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:jaxws="http://cxf.apache.org/jaxws"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://cxf.apache.org/jaxws 
   http://cxf.apache.org/schemas/jaxws.xsd">

    <jaxws:client name="tallerws" createdFromAPI="true">
        <!-- Comment below element to use non-WS-SecPol CXF interceptor method -->
        <jaxws:properties>
            <entry key="ws-security.callback-handler" value="client.ClientKeystorePasswordCallback"/>        
            <entry key="ws-security.encryption.properties" value="clientKeystore.properties"/>
            <entry key="ws-security.signature.properties" value="clientKeystore.properties"/>
            <entry key="ws-security.encryption.username" value="myservicekey"/>
        </jaxws:properties>

        <!-- Uncomment below interceptors to use CXF interceptor method -->
        <!--jaxws:inInterceptors>
            <ref bean="TimestampSignEncrypt_Response"/>
            <bean class="org.apache.cxf.ws.security.wss4j.DefaultCryptoCoverageChecker"/>
        </jaxws:inInterceptors>
        <jaxws:outInterceptors>
            <ref bean="TimestampSignEncrypt_Request"/>
        </jaxws:outInterceptors-->
    </jaxws:client>

    <!-- 
        This bean is needed only if you're using the CXF interceptor method (per above 
        configuration, it's ignored if you're using the WS-SecurityPolicy method.)
        
        This bean is an Out interceptor which will add a timestamp, 
        sign the timestamp and body, and then encrypt the timestamp 
        and body.  It uses 3DES as the symmetric key algorithm.
    -->
    <!--bean 
        class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor"
        id="TimestampSignEncrypt_Request">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="user" value="myclientkey"/>
                <entry key="signaturePropFile" value="clientKeystore.properties"/>
                <entry key="encryptionPropFile" value="clientKeystore.properties"/>
                <entry key="encryptionUser" value="myservicekey"/>
                <entry key="passwordCallbackClass" value="client.ClientKeystorePasswordCallback"/>
                <entry key="signatureParts" value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionParts" value="{Element}{http://www.w3.org/2000/09/xmldsig#}Signature;{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
                <entry key="encryptionKeyTransportAlgorithm" value="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"/>
                <entry key="signatureAlgorithm" value="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
            </map>
        </constructor-arg>
    </bean-->
    
    <!--    
        This bean is needed only if you're using the CXF interceptor method (per above 
        configuration, it's ignored if you're using the WS-SecurityPolicy method.)

        This bean is an In interceptor which will validate a signed,    
         encrypted response, and timestamp it.    
    -->
    <!--bean 
        class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"
        id="TimestampSignEncrypt_Response">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="signaturePropFile" value="clientKeystore.properties"/>
                <entry key="decryptionPropFile" value="clientKeystore.properties"/>
                <entry key="passwordCallbackClass" value="client.ClientKeystorePasswordCallback"/>
                <entry key="encryptionKeyTransportAlgorithm" value="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"/>
                <entry key="signatureAlgorithm" value="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
            </map>
        </constructor-arg>
    </bean-->

</beans>